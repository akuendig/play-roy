{
  "name": "findme",
  "description": "Textual module requirement specification",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@sidelab.com"
  },
  "tags": [
    "require"
  ],
  "version": "0.0.3",
  "engines": {
    "node": ">= 0.6.x < 0.9.0"
  },
  "dependencies": {},
  "devDependencies": {
    "expect.js": "0.1.x",
    "mocha": "1.2.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/buildjs/findme.git"
  },
  "bugs": {
    "url": "http://github.com/buildjs/findme/issues"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "contributors": [],
  "optionalDependencies": {},
  "readme": "# findme\n\nFindMe is a small node library that is designed to parse a string and generate a list of dependencies that have been found in the string embedded in `// dep:` or `// req:` comments.\n\n<a href=\"http://travis-ci.org/#!/DamonOehlman/findme\"><img src=\"https://secure.travis-ci.org/DamonOehlman/findme.png\" alt=\"Build Status\"></a>\n\n## Requirement Definition\n\nA requirement can be defined in a number of ways. Firstly, you can specify a module simply by name:\n\n```js\n// req: underscore\n```\n\n### Versioning\n\nor, you can specify a particular version of underscore:\n\n```js\n// req: underscore 1.3.x\n```\n\n__NOTE__: While findme uses the [semver](http://semver.org/) syntax you can only specify either a concrete version (e.g. `1.3.3`) or a latest patch release for a specific minor version (e.g. `1.3.x`).  Support for other patterns has not been provided as in general using patterns such as `>= 1` and the like are discouraged when building apps.\n\n### Aliases\n\nIn the case of some packages / modules, they are usually given an alias within the context of your code.  For instance, the underscore module exports itself as the `_` character.  To support this in findme powered libraries, simply specify your requirement with an alias:\n\n```js\n// req: underscore as _\n```",
  "_id": "findme@0.0.3",
  "_from": "findme@0.0.x"
}
