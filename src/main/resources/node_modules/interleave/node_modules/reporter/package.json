{
  "name": "reporter",
  "description": "Event Interceptor designed for taking common action in response to object events",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@sidelab.com"
  },
  "tags": [
    "event",
    "interceptor"
  ],
  "version": "0.0.1",
  "engines": {
    "node": ">= 0.6.x < 0.9.0"
  },
  "dependencies": {
    "underscore": "1.3.x"
  },
  "devDependencies": {
    "mocha": "1.2.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/DamonOehlman/node-reporter.git"
  },
  "bugs": {
    "url": "http://github.com/DamonOehlman/node-reporter/issues"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --reporter spec"
  },
  "contributors": [],
  "readme": "# node-reporter\n\nThe node-reporter package is designed to assist you with responding to events that occur within your application, and providing some uniform process handling.\n\n<a href=\"http://travis-ci.org/#!/DamonOehlman/node-reporter\"><img src=\"https://secure.travis-ci.org/DamonOehlman/node-reporter.png\" alt=\"Build Status\"></a>\n\nConsider that you have a particular object that generates events, and those events might generate particular command-line output (as one example).  While it is simple enough to wire up handlers to generate the appropriate output for a handler for the one object, if you have multiple objects that generate similar events then this becomes a tedious task.  This is where reporter comes in.\n\n## Example Usage\n\nThe following shows a simple example of using the reporter.  In this example, we create a simple EventEmitter that will emit events, and we use this to emit a `click` event.  \n\nPrior to this, though we setup a reporter and have it watch the target object and add a rule to handle the click case.\n\n```js\nvar events = require('events'),\n    reporter = require('reporter'),\n    target = new events.EventEmitter();\n\n// make the reporter watch the target\nreporter.watch(target);\n\n// add some rules to the reporter to handle click events\nreporter.addRules({\n    click: function() {\n        console.log('A click happened');\n    }\n});\n\n// tell the target to emit a click event\ntarget.emit('click');\n```\n\n## Installation\n\n```\nnpm install reporter\n```",
  "_id": "reporter@0.0.1",
  "_from": "reporter@0.0.x"
}
